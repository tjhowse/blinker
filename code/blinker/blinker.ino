// uint8_t const sequence[] = {170, 34, 234, 46, 163, 187, 128, 174, 139, 163, 187, 142, 224, 56, 170, 32, 42, 142, 238, 46, 226, 162, 2, 186, 46, 59, 138, 46, 163, 174, 224, 56, 186, 46, 42, 226, 138, 128, 238, 40, 235, 162, 168, 139, 168, 186, 136, 11, 139, 168, 142, 174, 2, 227, 163, 168, 10, 139, 142, 224};
uint8_t const sequence[] = {187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 11, 186, 46, 46, 138, 42, 2, 238, 139, 139, 162, 138, 128, 187, 162, 226, 232, 162, 160, 46, 232, 184, 186, 40, 168, 0};

// http://www.technoblogy.com/show?1YQY

uint16_t volatile counter = 0;

void setup() {
  DDRB = 0b0001; // PB0 as an output
  // PORTB = 0x0001; // PB0 on
  PORTB = 0x0000; // PB0 off
  // #TODO move this to an ISR and fire it with a wake-from-sleep vector, if possible.
  for (counter = 0; counter < sizeof(sequence)*8; counter++ ) {
    PORTB = sequence[counter>>3] & (0x01 << counter%8);
    // Sleep for 100ms.
    // Look at 8. Power Management and Sleep Modes.
    // 9.3. Watchdog Timer
  }
}

void loop() {
}